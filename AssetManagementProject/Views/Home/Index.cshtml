@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    bool isAjax = Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest";
    Layout = isAjax ? null : "_Layout";
}

<div class="top-right-button">
    <button id="generate-report" class="generate-btn">Generate Report</button>
</div>

<div class="card-row">
    <div class="card card-blue">
        <div class="metric-header">
            <span class="title">Total Assets</span>
            <span class="count">@Model.TotalAssets</span>
        </div>
    </div>
    <div class="card card-green">
        <div class="metric-header">
            <span class="title">Assigned Assets</span>
            <span class="count">@Model.AssignedAssets</span>
        </div>
    </div>
    <div class="card card-yellow">
        <div class="metric-header">
            <span class="title">Under Maintenance</span>
            <span class="count">@Model.UnderMaintenance</span>
        </div>
    </div>
</div>

<div class="card-row chart-grid">
    <div class="card chart-card card-purple">
        <h3>Assets By Category</h3>
        <h5>Overview of assets and their status</h5>
        <canvas id="assetsByCategoryChart" width="400" height="400"></canvas>
    </div>
    <div class="card chart-card card-orange lower-right">
        <h3>Bar Chart</h3>
        <div class="chart-placeholder">[Bar Chart]</div>
    </div>
</div>

<div class="card card-lightgray">
    <h3>Recent Asset Assignments</h3>
    <ul class="recent-assignments">
        @foreach (var assignment in Model.RecentAssignments)
        {
            <li>
                <span class="asset-name">@assignment.AssetName</span>
                <span class="issued-to">@assignment.IssuedTo</span>
                <span class="date-assigned">@assignment.DateAssigned.ToShortDateString()</span>
            </li>
        }
    </ul>
</div>


<div class="card-row chart-grid">
    <div class="card card-mint">
        <h3>Under Maintenance</h3>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('assetsByCategoryChart').getContext('2d');

        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
                    Model.AssetsByCategory.Select(c => c.Category)
            ));

    const dataValues = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
                Model.AssetsByCategory.Select(c => c.Count)
        ));

    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: labels,
            datasets: [{
                label: 'Assets by Category',
                data: dataValues,
                backgroundColor: [
                    '#6a5acd', '#20b2aa', '#ffcc00', '#ff6347', '#2e8b57', '#ff8c00', '#8b0000'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
</script>
}
